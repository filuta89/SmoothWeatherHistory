{% extends 'base.html.twig' %}

{% block head %}
    {% block stylesheets %}
        {{ parent() }}
{#        <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">#}
    {% endblock %}
    {% block title %}Smooth Weather History{% endblock %}
{% endblock %}

{% block body %}

    <h1 style="display: flex; justify-content: center;">Smooth Weather History</h1>

    <h6 style="display: flex; justify-content: center;">Choose a date interval from 01/01/1941 to today minus 6 days and a location out of available list.</h6>
    <h6 style="display: flex; justify-content: center;">Type atleast 3 characters in the city field to view list of suggestions and select one of those.</h6>
    <h7 style="display: flex; justify-content: center;">The list of cities and its geographical coordinates are taken from geocode.arcgis.com.</h7>
    <h7 style="display: flex; justify-content: center;">The date interval and the city's coordinates are then fed to open-meteo.com archive api request.</h7>

    <br>
    {{ form_start(form, {'attr': {'id': 'input-form', 'style': 'display: flex; flex-direction: column; align-items: center;'}}) }}

    {{ form_widget(form.startDate, {'attr': {'placeholder': 'start Date - dd/mm/yyyy'}}) }}
    <br>

    {{ form_widget(form.endDate, {'attr': {'placeholder': 'end Date - dd/mm/yyyy'}}) }}
    <br>

    {{ form_widget(form.city, {'id': 'city', 'attr': {'placeholder': 'city - type atleast 3 letters', 'title': 'Type atleast 3 characters in the city field to view list of suggestions and select one of those.'}}) }}
    <br>

    <div style="display: none;">
        {{ form_widget(form.latitude, {'id': 'latitude', 'attr': {'required': 'required'}}) }}
        {{ form_widget(form.longitude, {'id': 'longitude', 'attr': {'required': 'required'}}) }}
    </div>

    <button type="submit" class="btn btn-primary" title="Type atleast 3 characters in the city field to view list of suggestions and select one of those.">Submit</button>
    <br>
    {{ form_end(form) }}

    <div id="accordion">
        {% for response_id in response_ids %}
            {% set weather_data_instance = weather_data[loop.index0] %}
            {% include 'weatherData.html.twig' with {'weather_data': weather_data_instance, 'index': loop.index, 'response_id': response_id} %}
        {% endfor %}
    </div>
    <div id="new_data_response" style="display: none">
        {% if new_weather_data is defined and new_response_id is defined%}
            {% set new_weather_data_instance = new_weather_data[0] %}
            {% include 'weatherData.html.twig' with {'weather_data': new_weather_data_instance, 'index': 0, 'response_id': new_response_id} %}
        {% endif %}
    </div>
    
    <div id="footer" class="pt-2 mt-2 border-top">
        <h7 style="display: flex; justify-content: center;">Assembled by Zbyněk Šulc ©2023</h7>
    </div>

    {% block javascripts %}
        {{ encore_entry_script_tags('app') }}
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

        <script src="{{ asset('js/autocomplete.js') }}"></script>

        <script>
            function attachDeleteButtonListeners() {
                const deleteButtons = document.querySelectorAll('.delete-weather-btn');
                deleteButtons.forEach(function (button) {
                    button.removeEventListener('click', handleClick);
                    button.addEventListener('click', handleClick);
                });
            }

            function handleClick(event) {
                event.preventDefault();

                if (confirm('Are you sure you want to delete this weather data?')) {
                    const responseId = event.target.getAttribute('data-response-id');
                    fetch('{{ path('delete_weather_data') }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: new URLSearchParams({
                            'response_id': responseId
                        })
                    }).then(function (response) {
                        if (response.status === 204) {
                            const card = event.target.closest('.card');
                            card.remove();
                        } else {
                            alert('An error occurred while deleting the weather data.a');
                        }
                    }).catch(function (error) {
                        console.error('Error:', error);
                        alert('An error occurred while deleting the weather data.b');
                    });
                } else {
                    // The user clicked 'No', so stop propagation of the event
                    event.stopPropagation();
                }
            }

            document.addEventListener('DOMContentLoaded', function () {
                const form = document.getElementById('input-form');

                // console.log('---form---');
                // console.log(form.outerHTML);
                
                const initDatepicker = (elementId) => {
                    $(elementId).datepicker({
                        dateFormat: "dd/mm/yy",
                        minDate: new Date(1941, 0, 1),
                        maxDate: "-6d",
                    });
                };

                initDatepicker("#{{ form.startDate.vars.id }}");
                initDatepicker("#{{ form.endDate.vars.id }}");

                // console.log('datepickers were initiated.');

                attachDeleteButtonListeners();

                form.addEventListener('submit', function (event) {
                    event.preventDefault();

                    const formData = new FormData(form);
                    fetch('{{ path('fetch_weather') }}', {
                        method: 'POST',
                        body: formData
                    }).then(function (response) {
                        return response.text();
                    }).then(function (html) {
                        const doc = new DOMParser().parseFromString(html, 'text/html');

                        // console.log(doc.documentElement.outerHTML);
                        // console.log('fetch request response from server received.');

                        const newDataResponse = doc.querySelector('#new_data_response');

                        // console.log('---newDataResponse---');
                        // console.log(newDataResponse.outerHTML);

                        if (newDataResponse && newDataResponse.querySelector('.card')) {
                            const newResponseCard = newDataResponse.querySelector('.card:last-child');
                            const newResponseId = newResponseCard.querySelector('.delete-weather-btn')
                                .getAttribute('data-response-id');

                            // console.log('#new_data_response .card was found.');

                            const newWeatherData = newResponseCard;

                            const accordionId = 'accordion-' + newResponseId;
                            const newAccordionDiv = document.createElement('div');
                            newAccordionDiv.className = 'accordion';
                            newAccordionDiv.id = accordionId;

                            const importedWeatherData = document.importNode(newWeatherData, true);
                            newAccordionDiv.appendChild(importedWeatherData);

                            const accordion = document.getElementById('accordion');
                            accordion.appendChild(newAccordionDiv);

                            attachDeleteButtonListeners();
                        } else {
                            // console.log('#new_data_response .card was NOT found.');
                        }
                    }).catch(function (error) {
                        console.error('Error:', error);
                        alert('An error occurred while fetching the weather data.c');
                    });
                });
            });
        </script>

    {% endblock %}
{% endblock %}

